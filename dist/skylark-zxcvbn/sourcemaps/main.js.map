{"version":3,"sources":["main.js"],"names":["define","time_estimates","feedback","scoring","matching","time","Date","getTime","password","user_inputs","arg","attack_times","i","len","matches","prop","ref","result","sanitized_inputs","start","val","length","push","toString","toLowerCase","set_user_input_dictionary","omnimatch","most_guessable_match_sequence","calc_time","estimate_attack_times","guesses","get_feedback","score","sequence"],"mappings":";;;;;;;AAAAA,QACE,mBACA,aACA,YACA,cACA,SAASC,EAAeC,EAASC,EAAQC,GACzC,IAAIC,EA8BJ,OA5BAA,EAAO,WACL,OAAO,IAAKC,MAAQC,WAGb,SAASC,EAAUC,MAC1B,IAAIC,EAAKC,EAAcC,EAAGC,EAAKC,EAASC,EAAMC,EAAKC,EAAQC,EAAkBC,EAAOC,EAIpF,IAHAD,EAAQd,IAERa,KACKN,EAAI,EAAGC,EAAMJ,EAAYY,OAAQT,EAAIC,EAAKD,IAElB,WAAtBI,SADLN,EAAMD,EAAYG,MAC6B,WAARI,GAA4B,YAARA,GACzDE,EAAiBI,KAAKZ,EAAIa,WAAWC,eAQzC,IAAKT,KALLX,EAASqB,0BAA0BP,GACnCJ,EAAUV,EAASsB,UAAUlB,IAC7BS,EAASd,EAAQwB,8BAA8BnB,EAAUM,IAClDc,UAAYvB,IAASc,EAC5BR,EAAeV,EAAe4B,sBAAsBZ,EAAOa,SAEzDV,EAAMT,EAAaI,GACnBE,EAAOF,GAAQK,EAGjB,OADAH,EAAOf,SAAWA,EAAS6B,aAAad,EAAOe,MAAOf,EAAOgB,UACtDhB","file":"../main.js","sourcesContent":["define([\n  './time_estimates',\n  './feedback',\n  './scoring',\n  './matching'\n],function(time_estimates,feedback,scoring,matching){\n  var time, time_estimates, zxcvbn;\n\n  time = function() {\n    return (new Date()).getTime();\n  };\n\n  zxcvbn = function(password, user_inputs = []) {\n    var arg, attack_times, i, len, matches, prop, ref, result, sanitized_inputs, start, val;\n    start = time();\n    // reset the user inputs matcher on a per-request basis to keep things stateless\n    sanitized_inputs = [];\n    for (i = 0, len = user_inputs.length; i < len; i++) {\n      arg = user_inputs[i];\n      if ((ref = typeof arg) === \"string\" || ref === \"number\" || ref === \"boolean\") {\n        sanitized_inputs.push(arg.toString().toLowerCase());\n      }\n    }\n    matching.set_user_input_dictionary(sanitized_inputs);\n    matches = matching.omnimatch(password);\n    result = scoring.most_guessable_match_sequence(password, matches);\n    result.calc_time = time() - start;\n    attack_times = time_estimates.estimate_attack_times(result.guesses);\n    for (prop in attack_times) {\n      val = attack_times[prop];\n      result[prop] = val;\n    }\n    result.feedback = feedback.get_feedback(result.score, result.sequence);\n    return result;\n  };\n\n  return zxcvbn;\n});"]}